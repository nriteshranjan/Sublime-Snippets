<snippet>
	<content><![CDATA[
const int MAX_N = 10000002;
int p[MAX_N];

void buildSieve()
{
    for (int i = 1; i < MAX_N; i++)    p[i] = i;
    for (int i = 4; i < MAX_N; i += 2) p[i] = 2;
    for (int i = 3; i * i < MAX_N; i += 2)
    {
        if (p[i] == i)
        {
            for (int j = i * i; j < MAX_N; j += i)
                if (p[j] == j) p[j] = i;
        }
    }
}
vector<pair<int, int>> primeFactorize(int x)
{
    if (x <= 1) return {};
    vector<pair<int, int>> ret;
    while (x != 1)
    {
        int prime = p[x], cnt = 0;
        while (x % prime == 0)
        {
            cnt++; x /= prime;
        }
        ret.push_back({prime, cnt});
    }
    return ret;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>primeFactorizationSieve</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++, source.cpp</scope>
</snippet>
